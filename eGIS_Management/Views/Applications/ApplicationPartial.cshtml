@model eGIS_Management.Models.Application
<script src="@Url.Content("~/Scripts/jquery-3.4.1.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
       
        var sectorID = $("#SectorID").val();
        if (sectorID == 0)
        { DFORegionChanged();}

    });
</script>

<script type="text/javascript">
    var remoteUrl = '@Url.Content("~/Applications/")';
    function DFORegionChanged() {
        var regionID = $("#RegionID").val();
        //alert("selected region=" + regionID );
        if (regionID == 0) {
            $('#SectorID').html('');
            $("#SectorID").attr('disabled','disabled');
        }
        else {
            $.ajax({
                type: "POST",
                url: remoteUrl + "GetSectorListByRegionID/?regionID=" + regionID,
                //dataType: 'html',
                contentType:'application/json',
                async: false,
                data: "{}",
                success: function (items) {
                    if (items.length > 0) {
                        //alert("items length=" + items.length);
                        $('#SectorID').html('');
                        var options = '';
                        options += '<option value="--Please select--">--Please select--</option>';
                        $(items).each(function (index, item) {
                           // alert("index=" + index + "name=" + item.Text);
                            options += '<option value="' + item.Value + '">' + item.Text+ '</option>';
                        });
                        $('#SectorID').append(options);
                    };
                },
                error: function (request, status, error) {
                    alert('status=' + status + ' error=' + error);
                }

            });
            $("#SectorID").removeAttr('disabled');

        }
    }

    //function SectorChanged() {
    //    var sectorID = $("#fgpRecord_SectorID").val();
    //    alert("SectorID=" + sectorID);
    //}

</script>
<div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.APM_ID, "APM ID", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.APM_ID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.APM_ID, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.GIS_Environment_ID, "GIS Environment", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("GIS_Environment_ID", null, "Please select", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.GIS_Environment_ID, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.TypeID, "Application Type", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("TypeID", null, "Please select", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.TypeID, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.RegionID, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("RegionID", null, "--Please select--", new { @class = "form-control", onchange = "DFORegionChanged()" })
        @Html.ValidationMessageFor(model => model.RegionID)
    </div>
</div>


<div class="form-group">
    @Html.LabelFor(model => model.SectorID, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("SectorID", null, "--Please select--", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SectorID)
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.URL_En, "URL (En)", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.URL_En, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.URL_En, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.URL_Fr, "URL (Fr)", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.URL_Fr, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.URL_Fr, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.TechSupport1, "Primary Tech Support Contact", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("TechSupport1", null, "Please select", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.TechSupport1, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.TechSupport2, "Secondary Tech Support Contact", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("TechSupport2", null, "Please select", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.TechSupport2, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ClientContact1, "Primary Business Contact", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("ClientContact1", null, "Please select", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ClientContact1, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ClientContact2, "Secondary Business Contact", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("ClientContact2", null, "Please select", htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ClientContact2, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.DevOps_Link_En, "DevOps Link (En)", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.DevOps_Link_En, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DevOps_Link_En, "", new { @class = "text-danger" })
    </div>
</div>



<div class="form-group">
    @Html.LabelFor(model => model.Technical_Doc_Link, "Technical Document Link", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Technical_Doc_Link, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Technical_Doc_Link, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
    </div>
</div>


